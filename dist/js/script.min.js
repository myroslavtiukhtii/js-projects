window.addEventListener("DOMContentLoaded",function(){var _a,_b,COUNTERSEC=document.querySelector(".stop-watch__counter__seconds"),COUNTERMIN=document.querySelector(".stop-watch__counter__minutes"),STARTBTN=null==(_a=document.querySelector(".stop-watch__start"))?void 0:_a.addEventListener("click",startCounting),STOPBTN=document.querySelector(".stop-watch__stop"),RESETBTN=(STOPBTN.addEventListener("click",stopWatch),null==(_b=document.querySelector(".stop-watch__reset"))?void 0:_b.addEventListener("click",resetWatch)),DOTS=document.querySelector(".stop-watch__counter__dots"),counter=0,counterMin=0,watchInterval;function startCounting(){0<counter||(startDots(),watchInterval=setInterval(countingInterval,1e3))}function startDots(){null!=DOTS&&DOTS.classList.toggle("active")}function countingInterval(){59<++counter?(counter=0,COUNTERSEC.innerHTML="0"+String(counter.toFixed(0)),counterMin++,COUNTERMIN.innerHTML=10<=counterMin?String(counterMin):"0"+String(counterMin)):COUNTERSEC.innerHTML=10<=counter?String(counter.toFixed(0)):"0"+String(counter.toFixed(0))}function resetWatch(){COUNTERMIN.innerHTML="00",COUNTERSEC.innerHTML="00",counterMin=counter=0,STOPBTN.classList.remove("active")}function stopWatch(){0<counter&&(startDots(),STOPBTN.classList.toggle("active"),STOPBTN.classList.contains("active")?(STOPBTN.textContent="Paused",clearInterval(watchInterval)):(STOPBTN.textContent="Stop",watchInterval=setInterval(countingInterval,1e3)))}var SCREEN=document.querySelector(".calculator__screen"),PLUSBTN=document.querySelector(".calculator__increment"),MINUSBTN=document.querySelector(".calculator__decrement"),MULTIBTN=document.querySelector(".calculator__multiplication"),DIVBTN=document.querySelector(".calculator__division"),NUMDOT=document.querySelector(".calculator__numbers__dot"),NUMCLEAR=document.querySelector(".calculator__numbers__clear"),EQUALBTN=document.querySelector(".calculator__equal"),numbers=[],numberOne=0,symbol="",sum=0,numbersTest=[];function takeDataTag(t){if(t.target.hasAttribute("data-symbol")){t=t.target.getAttribute("data-symbol");if(t&&numbers.length<9){numbers.push(Number(t));for(var e=0;e<numbers.length;e++)SCREEN.textContent=numbers.join("")}}}function addNumber(){numberOne=Number(numbers.join("")),numbers=[],addOperator()}function addOperator(){numbersTest.push(numberOne),numbersTest.push(symbol),console.log(numbersTest)}function makeOperation(symbol){numbers=[],numbersTest.pop();var sum=eval(numbersTest.join(""));SCREEN.textContent=sum}document.addEventListener("click",takeDataTag),NUMCLEAR.addEventListener("click",function(){SCREEN.textContent="0",numbers=[],numbersTest=[]}),NUMDOT.addEventListener("click",function(){numbers.push(".")}),PLUSBTN.addEventListener("click",function(){symbol="+",addNumber()}),MINUSBTN.addEventListener("click",function(){symbol="-",addNumber()}),MULTIBTN.addEventListener("click",function(){symbol="*",addNumber()}),DIVBTN.addEventListener("click",function(){symbol="/",addNumber()}),EQUALBTN.addEventListener("click",function(){switch(symbol){case"+":case"-":case"*":case"/":addOperator(),makeOperation(symbol),numbersTest=[]}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
